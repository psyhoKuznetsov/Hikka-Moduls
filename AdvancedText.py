__version__ = (1, 1, 0)
# meta developer: @psyhomodules

from hikkatl.types import Message
from .. import loader, utils

@loader.tds
class AdvancedTextModule(loader.Module):
    strings = {"name": "AdvancedText"}

    def __init__(self):
        self.enabled_bold = False
        self.enabled_italic = False
        self.enabled_mono = False
        self.enabled_underline = False
        self.enabled_strikethrough = False
        self.enabled_center = False

    async def client_ready(self, client, db):
        self.client = client
        self.db = db

    async def edit_text(self, message: Message):
        text = message.text
        if not text:
            return

        if self.enabled_bold:
            text = f"<b>{text}</b>"
        if self.enabled_italic:
            text = f"<i>{text}</i>"
        if self.enabled_mono:
            text = f"<code>{text}</code>"
        if self.enabled_underline:
            text = f"<u>{text}</u>"
        if self.enabled_strikethrough:
            text = f"<s>{text}</s>"
        if self.enabled_center:
            text = f"<center>{text}</center>"

        await message.edit(text, parse_mode="HTML")

    def disable_all_styles(self):
        self.enabled_bold = False
        self.enabled_italic = False
        self.enabled_mono = False
        self.enabled_underline = False
        self.enabled_strikethrough = False
        self.enabled_center = False

    @loader.command()
    async def bold(self, message: Message):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç."""
        self.disable_all_styles()
        self.enabled_bold = not self.enabled_bold
        status = "–≤–∫–ª—é—á–µ–Ω" if self.enabled_bold else "–≤—ã–∫–ª—é—á–µ–Ω"
        await utils.answer(message, f"ü™ê <b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b> {status}  ï¬∑·¥•¬∑ î", parse_mode="HTML")

    @loader.command()
    async def italic(self, message: Message):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫—É—Ä—Å–∏–≤."""
        self.disable_all_styles()
        self.enabled_italic = not self.enabled_italic
        status = "–≤–∫–ª—é—á–µ–Ω" if self.enabled_italic else "–≤—ã–∫–ª—é—á–µ–Ω"
        await utils.answer(message, f"ü™ê <i>–ö—É—Ä—Å–∏–≤</i> {status}  ï¬∑·¥•¬∑ î", parse_mode="HTML")

    @loader.command()
    async def mono(self, message: Message):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç."""
        self.disable_all_styles()
        self.enabled_mono = not self.enabled_mono
        status = "–≤–∫–ª—é—á–µ–Ω" if self.enabled_mono else "–≤—ã–∫–ª—é—á–µ–Ω"
        await utils.answer(message, f"ü™ê <code>–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç</code> {status}  ï¬∑·¥•¬∑ î", parse_mode="HTML")

    @loader.command()
    async def underline(self, message: Message):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ."""
        self.disable_all_styles()
        self.enabled_underline = not self.enabled_underline
        status = "–≤–∫–ª—é—á–µ–Ω" if self.enabled_underline else "–≤—ã–∫–ª—é—á–µ–Ω"
        await utils.answer(message, f"ü™ê <u>–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ</u> {status}  ï¬∑·¥•¬∑ î", parse_mode="HTML")

    @loader.command()
    async def strikethrough(self, message: Message):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∑–∞—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ."""
        self.disable_all_styles()
        self.enabled_strikethrough = not self.enabled_strikethrough
        status = "–≤–∫–ª—é—á–µ–Ω" if self.enabled_strikethrough else "–≤—ã–∫–ª—é—á–µ–Ω"
        await utils.answer(message, f"ü™ê <s>–ó–∞—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ</s> {status}  ï¬∑·¥•¬∑ î", parse_mode="HTML")

    @loader.command()
    async def off(self, message: Message):
        """–û—Ç–∫–ª—é—á–∞–µ—Ç –≤—Å–µ —Å—Ç–∏–ª–∏."""
        self.disable_all_styles()
        await utils.answer(message, "ü™ê –í—Å–µ —Å—Ç–∏–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω—ã  ï¬∑·¥•¬∑ î", parse_mode="HTML")

    @loader.command()
    async def on(self, message: Message):
        """–í–∫–ª—é—á–∞–µ—Ç —Å—Ç–∏–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç)."""
        self.disable_all_styles()
        self.enabled_bold = True
        await utils.answer(message, "ü™ê –°—Ç–∏–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç) –≤–∫–ª—é—á–µ–Ω  ï¬∑·¥•¬∑ î", parse_mode="HTML")

    @loader.watcher(out=True)
    async def watcher(self, message: Message):
        """–°—Ä–∞–∑—É —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø—Ü–∏–π."""
        if any([self.enabled_bold, self.enabled_italic, self.enabled_mono, self.enabled_underline, self.enabled_strikethrough, self.enabled_center]):
            await self.edit_text(message)
