__version__ = (1, 0, 1)
# meta developer: @psyhomodules

import logging
import asyncio
from hikkatl.types import Message
from hikkatl.errors import FloodWaitError
from .. import loader, utils

@loader.tds
class TotalPurge(loader.Module):
    """–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞/–∫–∞–Ω–∞–ª–∞/–ª—Å"""
    strings = {"name": "Purge"}

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        
    @loader.unrestricted
    async def purgecmd(self, message: Message):
        """–£–¥–∞–ª–∏—Ç—å –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ —Ç–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –≤ –∫–∞–Ω–∞–ª–∞—Ö –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –µ—Ç—É –∫–æ–º–∞–Ω–¥—É"""
        chat = await message.get_chat()
        count = 0
        
        async for msg in self.client.iter_messages(chat):
            try:
                await msg.delete()
                count += 1
                if count % 500 == 0:
                    await message.edit(f"üöÆ –£–¥–∞–ª–µ–Ω–æ: {count}")
            except FloodWaitError as e:
                await asyncio.sleep(e.seconds)
                continue
            except Exception:
                pass

        await message.delete()
        await self.client.send_message(chat, f"‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {count} —Å–æ–æ–±—â–µ–Ω–∏–π")
